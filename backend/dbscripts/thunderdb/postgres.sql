-- Table to store Organization Units
CREATE TABLE ORGANIZATION_UNIT (
    ID              INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    OU_ID           VARCHAR(36) UNIQUE NOT NULL,
    PARENT_ID       VARCHAR(36),
    NAME            VARCHAR(50)        NOT NULL,
    DESCRIPTION     VARCHAR(255),
    CREATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY (PARENT_ID) REFERENCES ORGANIZATION_UNIT (OU_ID) ON DELETE CASCADE
);

-- Table to store Users
CREATE TABLE "USER" (
    ID          INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_ID     VARCHAR(36) UNIQUE NOT NULL,
    OU_ID       VARCHAR(36)        NOT NULL,
    TYPE        VARCHAR(50)        NOT NULL,
    ATTRIBUTES  JSONB,
    CREDENTIALS JSONB,
    CREATED_AT  TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT  TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store Groups
CREATE TABLE "GROUP" (
    ID              INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    GROUP_ID        VARCHAR(36) UNIQUE NOT NULL,
    PARENT_ID VARCHAR(36),
    OU_ID           VARCHAR(36)        NOT NULL,
    NAME            VARCHAR(50)        NOT NULL,
    DESCRIPTION     VARCHAR(255),
    CREATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT      TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY (PARENT_ID) REFERENCES "GROUP" (GROUP_ID) ON DELETE CASCADE
);

-- Table to store Group-User memberships
CREATE TABLE GROUP_USER_REFERENCE (
    ID         INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    GROUP_ID   VARCHAR(36) NOT NULL,
    USER_ID    VARCHAR(36) NOT NULL,
    CREATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY (GROUP_ID) REFERENCES "GROUP" (GROUP_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID) ON DELETE CASCADE
);

-- Table to store basic service provider (app) details.
CREATE TABLE SP_APP (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    APP_ID VARCHAR(36) UNIQUE NOT NULL,
    APP_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(50) NOT NULL,
    AUTH_FLOW_GRAPH_ID VARCHAR(50) NOT NULL,
    REGISTRATION_FLOW_GRAPH_ID VARCHAR(50) NOT NULL,
    ORG_ID VARCHAR(100) NOT NULL
);

-- Table to store OAuth configurations for SP apps.
CREATE TABLE IDN_OAUTH_CONSUMER_APPS (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CONSUMER_KEY VARCHAR(255) NOT NULL,
    CONSUMER_SECRET VARCHAR(255) NOT NULL,
    APP_ID VARCHAR(36) NOT NULL REFERENCES SP_APP(APP_ID) ON DELETE CASCADE,
    CALLBACK_URIS VARCHAR(500),
    GRANT_TYPES VARCHAR(255)
);

-- Table to store inbound auth configs (e.g., OAuth, SAML) for SP apps.
CREATE TABLE SP_INBOUND_AUTH (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    INBOUND_AUTH_KEY VARCHAR(255) NOT NULL,
    INBOUND_AUTH_TYPE VARCHAR(50) NOT NULL,
    APP_ID VARCHAR(36) NOT NULL REFERENCES SP_APP(APP_ID) ON DELETE CASCADE
);

-- Table to store allowed origins for OAuth apps.
CREATE TABLE IDN_OAUTH_ALLOWED_ORIGINS (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ALLOWED_ORIGINS VARCHAR(500) NOT NULL UNIQUE
);

-- Table to store API resources.
CREATE TABLE API_RESOURCE (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    IDENTIFIER VARCHAR(255) NOT NULL,
    UUID VARCHAR(36) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(500),
    REQUIRES_AUTHORIZATION BOOLEAN NOT NULL
);

-- Table to store API scopes.
CREATE TABLE SCOPE (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    UUID VARCHAR(36) UNIQUE NOT NULL,
    API_ID VARCHAR(36) NOT NULL REFERENCES API_RESOURCE(UUID) ON DELETE CASCADE,
    DISPLAY_NAME VARCHAR(255),
    DESCRIPTION VARCHAR(500)
);

-- Table to store authorized APIs for applications.
CREATE TABLE AUTHORIZED_API (
    APP_ID VARCHAR(36) NOT NULL REFERENCES SP_APP(APP_ID) ON DELETE CASCADE,
    API_ID VARCHAR(36) NOT NULL REFERENCES API_RESOURCE(UUID) ON DELETE CASCADE,
    POLICY VARCHAR(36),
    PRIMARY KEY (APP_ID, API_ID)
);

-- Table to store authorized scopes for applications.
CREATE TABLE AUTHORIZED_SCOPE (
    APP_ID VARCHAR(36) NOT NULL,
    API_ID VARCHAR(36) NOT NULL,
    SCOPE_ID VARCHAR(36) NOT NULL,
    FOREIGN KEY (APP_ID, API_ID) REFERENCES AUTHORIZED_API(APP_ID, API_ID) ON DELETE CASCADE,
    FOREIGN KEY (APP_ID) REFERENCES SP_APP(APP_ID) ON DELETE CASCADE,
    FOREIGN KEY (API_ID) REFERENCES API_RESOURCE(UUID) ON DELETE CASCADE,
    FOREIGN KEY (SCOPE_ID) REFERENCES SCOPE(UUID) ON DELETE CASCADE,
    PRIMARY KEY (APP_ID, API_ID, SCOPE_ID)
);

-- Table to store identity providers.
CREATE TABLE IDP (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    IDP_ID VARCHAR(36) UNIQUE NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(500),
    CREATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store identity provider properties.
CREATE TABLE IDP_PROPERTY (
    IDP_ID VARCHAR(36) REFERENCES IDP(IDP_ID) ON DELETE CASCADE,
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(500) NOT NULL,
    IS_SECRET CHAR(1) DEFAULT '0',
    PRIMARY KEY (IDP_ID, PROPERTY_NAME)
);

-- Table to store notification senders.
CREATE TABLE NOTIFICATION_SENDER (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    SENDER_ID VARCHAR(36) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(500),
    TYPE VARCHAR(20) NOT NULL,
    PROVIDER VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMPTZ DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ DEFAULT NOW()
);

-- Table to store notification sender properties.
CREATE TABLE NOTIFICATION_SENDER_PROPERTY (
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SENDER_ID VARCHAR(36) NOT NULL REFERENCES NOTIFICATION_SENDER(SENDER_ID) ON DELETE CASCADE,
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(500),
    IS_SECRET CHAR(1) DEFAULT '0',
    UNIQUE (SENDER_ID, PROPERTY_NAME)
);

-- Insert sample data into the tables.
INSERT INTO SP_APP (APP_NAME, APP_ID, DESCRIPTION, AUTH_FLOW_GRAPH_ID, REGISTRATION_FLOW_GRAPH_ID, ORG_ID) VALUES ('Test SPA', '550e8400-e29b-41d4-a716-446655440000', 'Initial testing App', 'auth_flow_config_basic', 'registration_flow_config_basic', 'f5b738ee-8ee4-4kd0-b174-6f8d1eaf32ad');

INSERT INTO IDN_OAUTH_CONSUMER_APPS (CONSUMER_KEY, CONSUMER_SECRET, APP_ID, CALLBACK_URIS, GRANT_TYPES)
VALUES ('client123', 'secret123', '550e8400-e29b-41d4-a716-446655440000', 'https://localhost:3000', 'client_credentials,authorization_code,refresh_token');

INSERT INTO SP_INBOUND_AUTH (INBOUND_AUTH_KEY, INBOUND_AUTH_TYPE, APP_ID)
VALUES ('client123', 'oauth2', '550e8400-e29b-41d4-a716-446655440000');

INSERT INTO IDN_OAUTH_ALLOWED_ORIGINS (ALLOWED_ORIGINS) VALUES ('https://localhost:3000,https://localhost:9001');

INSERT INTO API_RESOURCE (NAME, IDENTIFIER, UUID, DESCRIPTION, REQUIRES_AUTHORIZATION)
VALUES
('SCIM2 users API', '/scim2/Users', '550e8400-e29b-41d4-a716-446655440001', 'API representation of the SCIM2 Users API', TRUE),
('SCIM2 groups API', '/scim2/Groups', '550e8400-e29b-41d4-a716-446655440002', 'API representation of the SCIM2 Groups API', TRUE);

INSERT INTO SCOPE (NAME, UUID, API_ID, DISPLAY_NAME, DESCRIPTION)
VALUES
('internal_user_mgt_view', '550e8400-e29b-41d4-a716-446655440003', '550e8400-e29b-41d4-a716-446655440001', 'View user', 'View user accounts in the organization'),
('internal_user_mgt_edit', '550e8400-e29b-41d4-a716-446655440004', '550e8400-e29b-41d4-a716-446655440001', 'Edit user', 'Edit user accounts in the organization'),
('internal_group_mgt_view', '550e8400-e29b-41d4-a716-446655440005', '550e8400-e29b-41d4-a716-446655440002', 'View group', 'View group details in the organization');

INSERT INTO AUTHORIZED_API (APP_ID, API_ID, POLICY)
VALUES
('550e8400-e29b-41d4-a716-446655440000', '550e8400-e29b-41d4-a716-446655440001', 'RBAC'),
('550e8400-e29b-41d4-a716-446655440000', '550e8400-e29b-41d4-a716-446655440002', 'RBAC');

INSERT INTO AUTHORIZED_SCOPE (APP_ID, API_ID, SCOPE_ID)
VALUES
('550e8400-e29b-41d4-a716-446655440000', '550e8400-e29b-41d4-a716-446655440001', '550e8400-e29b-41d4-a716-446655440003'),
('550e8400-e29b-41d4-a716-446655440000', '550e8400-e29b-41d4-a716-446655440001', '550e8400-e29b-41d4-a716-446655440004'),
('550e8400-e29b-41d4-a716-446655440000', '550e8400-e29b-41d4-a716-446655440002', '550e8400-e29b-41d4-a716-446655440005');

INSERT INTO "USER" (USER_ID, OU_ID, TYPE, ATTRIBUTES)
VALUES
('550e8400-e29b-41d4-a716-446655440000', '456e8400-e29b-41d4-a716-446655440001', 'person',
'{"age": 30, "roles": ["admin", "user"], "address": {"city": "Colombo", "zip": "00100"}}');

INSERT INTO IDP (IDP_ID, NAME, DESCRIPTION)
VALUES
('550e8400-e29b-41d4-a716-446655440000', 'Local', 'Local Identity Provider'),
('550e8400-e29b-41d4-a716-446655440001', 'Github', 'Login with Github'),
('550e8400-e29b-41d4-a716-446655440002', 'Google', 'Login with Google');

INSERT INTO IDP_PROPERTY (IDP_ID, PROPERTY_NAME, PROPERTY_VALUE, IS_SECRET)
VALUES
('550e8400-e29b-41d4-a716-446655440001', 'client_id', 'client1', '0'),
('550e8400-e29b-41d4-a716-446655440001', 'client_secret', 'secret1', '1'),
('550e8400-e29b-41d4-a716-446655440001', 'redirect_uri', 'https://localhost:3000', '0'),
('550e8400-e29b-41d4-a716-446655440001', 'scopes', 'user:email,read:user', '0'),
('550e8400-e29b-41d4-a716-446655440002', 'client_id', 'client2', '0'),
('550e8400-e29b-41d4-a716-446655440002', 'client_secret', 'secret2', '1'),
('550e8400-e29b-41d4-a716-446655440002', 'redirect_uri', 'https://localhost:3000', '0'),
('550e8400-e29b-41d4-a716-446655440002', 'scopes', 'openid,email,profile', '0');

-- Insert sample organization units
INSERT INTO ORGANIZATION_UNIT (OU_ID, PARENT_ID, NAME, DESCRIPTION)
VALUES
('456e8400-e29b-41d4-a716-446655440001', NULL, 'Root Organization', 'Root organization unit'),
('456e8400-e29b-41d4-a716-446655440002', '456e8400-e29b-41d4-a716-446655440001', 'Engineering', 'Engineering department'),
('456e8400-e29b-41d4-a716-446655440003', '456e8400-e29b-41d4-a716-446655440001', 'Sales', 'Sales department'),
('456e8400-e29b-41d4-a716-446655440004', '456e8400-e29b-41d4-a716-446655440002', 'Frontend Team', 'Frontend development team');
